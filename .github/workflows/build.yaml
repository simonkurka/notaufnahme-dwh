name: Build packages
on:
  push:
    tags:
      - v[0-9]+.[0-9]+**
jobs:
  debian:
    runs-on: ubuntu-latest
    steps:
      - name: Prepare Version
        id: prep
        run: |
          echo ::set-output name=user::$(echo "${{ github.repository_owner }}" | tr '[:upper:]' '[:lower:]')
          echo ::set-output name=repo::$(echo "${{ github.repository }}" | awk -F / '{print $2}' | tr '[:upper:]' '[:lower:]')
          echo ::set-output name=version::${GITHUB_REF#refs/tags/v}
      - uses: actions/checkout@v2
      - name: Build
        run: debian/build.sh "${{ steps.prep.outputs.user }}-${{ steps.prep.outputs.repo }}" "${{ steps.prep.outputs.version }}"
      - name: Integration Test
        run: |
          wget -qO i2b2.deb "$(curl --silent https://api.github.com/repos/simonkurka/notaufnahme-i2b2/releases/latest | grep -E '"browser_download_url": ".*/simonkurka-notaufnahme-i2b2_[0-9]+.[0-9]+.[0-9]+.deb"' | sed -E 's/.*"([^"]+)".*/\1/')"
          sudo dpkg -i ./i2b2.deb || true
          sudo dpkg -i ./debian/build/${{ steps.prep.outputs.user }}-${{ steps.prep.outputs.repo }}_${{ steps.prep.outputs.version }}.deb || true
          sudo apt update && sudo apt install -f && sudo apt install libapache2-mod-php7.4
          sudo dpkg -i ./i2b2.deb
          sudo dpkg -i ./debian/build/${{ steps.prep.outputs.user }}-${{ steps.prep.outputs.repo }}_${{ steps.prep.outputs.version }}.deb
          run-parts test/
      - name: Sign package
        env:
          GPG_SIGNING_KEY: ${{ secrets.GPG_SIGNING_KEY }}
        if: env.GPG_SIGNING_KEY != null
        run: |
          echo -n "$GPG_SIGNING_KEY" | gpg --import
          sudo apt update && sudo apt install -y dpkg-sig
          dpkg-sig --sign builder debian/build/${{ steps.prep.outputs.user }}-${{ steps.prep.outputs.repo }}_${{ steps.prep.outputs.version }}.deb
      - name: Upload build artifact
        uses: actions/upload-artifact@v2
        with:
          name: ${{ steps.prep.outputs.user }}-${{ steps.prep.outputs.repo }}_${{ steps.prep.outputs.version }}.deb
          path: debian/build/${{ steps.prep.outputs.user }}-${{ steps.prep.outputs.repo }}_${{ steps.prep.outputs.version }}.deb
  docker:
    runs-on: ubuntu-latest
    steps:
      - name: Prepare Version
        id: prep
        run: |
          echo ::set-output name=user::$(echo "${{ github.repository_owner }}" | tr '[:upper:]' '[:lower:]')
          echo ::set-output name=repo::$(echo "${{ github.repository }}" | awk -F / '{print $2}' | tr '[:upper:]' '[:lower:]')
          echo ::set-output name=version::${GITHUB_REF#refs/tags/v}
      - uses: actions/checkout@v2
      - name: Prepare docker builds
        run: docker/build.sh "${{ steps.prep.outputs.user }}-${{ steps.prep.outputs.repo }}" "${{ steps.prep.outputs.version }}"
      - name: Login to GitHub Docker Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build docker image for ${{ github.job }} [httpd]
        uses: docker/build-push-action@v2
        with:
          context: docker/build/httpd
          tags: |
            ghcr.io/${{ github.repository }}-httpd:latest
            ghcr.io/${{ github.repository }}-httpd:${{ steps.prep.outputs.version }}
          push: false
      - name: Build docker image for ${{ github.job }} [database]
        uses: docker/build-push-action@v2
        with:
          context: docker/build/database
          tags: |
            ghcr.io/${{ github.repository }}-database:latest
            ghcr.io/${{ github.repository }}-database:${{ steps.prep.outputs.version }}
          push: false
      - name: Build docker image for ${{ github.job }} [wildfly]
        uses: docker/build-push-action@v2
        with:
          context: docker/build/wildfly
          tags: |
            ghcr.io/${{ github.repository }}-wildfly:latest
            ghcr.io/${{ github.repository }}-wildfly:${{ steps.prep.outputs.version }}
          push: false
      - name: Integration Test on Docker images
        run: |
          DWHIMAGENAMESPACE="ghcr.io/${{ github.repository }}-" docker-compose -f docker/docker-compose.yaml up --no-build --detach
          sleep 30
          run-parts test/
          DWHIMAGENAMESPACE="ghcr.io/${{ github.repository }}-" docker-compose -f docker/docker-compose.yaml down
      - name: Build and push docker image for ${{ github.job }} [httpd]
        uses: docker/build-push-action@v2
        with:
          context: docker/build/httpd
          tags: |
            ghcr.io/${{ github.repository }}-httpd:latest
            ghcr.io/${{ github.repository }}-httpd:${{ steps.prep.outputs.version }}
          push: true
      - name: Build and push docker image for ${{ github.job }} [database]
        uses: docker/build-push-action@v2
        with:
          context: docker/build/database
          tags: |
            ghcr.io/${{ github.repository }}-database:latest
            ghcr.io/${{ github.repository }}-database:${{ steps.prep.outputs.version }}
          push: true
      - name: Build and push docker image for ${{ github.job }} [wildfly]
        uses: docker/build-push-action@v2
        with:
          context: docker/build/wildfly
          tags: |
            ghcr.io/${{ github.repository }}-wildfly:latest
            ghcr.io/${{ github.repository }}-wildfly:${{ steps.prep.outputs.version }}
          push: true
  gh-release:
    runs-on: ubuntu-latest
    needs:
      - debian
    steps:
      - name: Prepare Version
        id: prep
        run: |
          echo ::set-output name=user::$(echo "${{ github.repository_owner }}" | tr '[:upper:]' '[:lower:]')
          echo ::set-output name=repo::$(echo "${{ github.repository }}" | awk -F / '{print $2}' | tr '[:upper:]' '[:lower:]')
          echo ::set-output name=version::${GITHUB_REF#refs/tags/v}
      - uses: actions/download-artifact@v2
        with:
          name: ${{ steps.prep.outputs.user }}-${{ steps.prep.outputs.repo }}_${{ steps.prep.outputs.version }}.deb
      - name: Release
        uses: marvinpinto/action-automatic-releases@latest
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          files: ${{ steps.prep.outputs.user }}-${{ steps.prep.outputs.repo }}_${{ steps.prep.outputs.version }}.deb

